62b26dc55e2fd9b3276a3a2c662c419c
const express = require('express');

const logger = require('morgan');

const bodyParser = require('body-parser');

const cors = require('cors');

const app = express(); // simple error handler

function errorHandler(err, req, res, next) {
  if (res.headersSent) {
    return next(err);
  }

  res.status(500).res.json({
    status: "error"
  });
}

app.use(cors());
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({
  extended: false
}));
app.use(errorHandler);

require('./server/routes')(app);

app.get('*', (req, res) => res.status(200).send({
  message: 'Nothing to see here. Not doing any fancy 404 stuff'
}));
module.exports = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImxvZ2dlciIsImJvZHlQYXJzZXIiLCJjb3JzIiwiYXBwIiwiZXJyb3JIYW5kbGVyIiwiZXJyIiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlcnNTZW50Iiwic3RhdHVzIiwianNvbiIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImdldCIsInNlbmQiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFFQSxNQUFNSSxHQUFHLEdBQUdMLE9BQU8sRUFBbkIsQyxDQUVBOztBQUNBLFNBQVNNLFlBQVQsQ0FBdUJDLEdBQXZCLEVBQTRCQyxHQUE1QixFQUFpQ0MsR0FBakMsRUFBc0NDLElBQXRDLEVBQTRDO0FBQzFDLE1BQUlELEdBQUcsQ0FBQ0UsV0FBUixFQUFxQjtBQUNuQixXQUFPRCxJQUFJLENBQUNILEdBQUQsQ0FBWDtBQUNEOztBQUNERSxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQWdCSCxHQUFoQixDQUFvQkksSUFBcEIsQ0FBeUI7QUFDdkJELElBQUFBLE1BQU0sRUFBRTtBQURlLEdBQXpCO0FBR0Q7O0FBRURQLEdBQUcsQ0FBQ1MsR0FBSixDQUFRVixJQUFJLEVBQVo7QUFDQUMsR0FBRyxDQUFDUyxHQUFKLENBQVFaLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFFQUcsR0FBRyxDQUFDUyxHQUFKLENBQVFYLFVBQVUsQ0FBQ1UsSUFBWCxFQUFSO0FBQ0FSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRWCxVQUFVLENBQUNZLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQVgsQ0FBdEIsQ0FBUjtBQUNBWCxHQUFHLENBQUNTLEdBQUosQ0FBUVIsWUFBUjs7QUFFQUwsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJJLEdBQTNCOztBQUNBQSxHQUFHLENBQUNZLEdBQUosQ0FBUSxHQUFSLEVBQWEsQ0FBQ1QsR0FBRCxFQUFNQyxHQUFOLEtBQWNBLEdBQUcsQ0FBQ0csTUFBSixDQUFXLEdBQVgsRUFBZ0JNLElBQWhCLENBQXFCO0FBQzlDQyxFQUFBQSxPQUFPLEVBQUU7QUFEcUMsQ0FBckIsQ0FBM0I7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gc2ltcGxlIGVycm9yIGhhbmRsZXJcbmZ1bmN0aW9uIGVycm9ySGFuZGxlciAoZXJyLCByZXEsIHJlcywgbmV4dCkge1xuICBpZiAocmVzLmhlYWRlcnNTZW50KSB7XG4gICAgcmV0dXJuIG5leHQoZXJyKTtcbiAgfVxuICByZXMuc3RhdHVzKDUwMCkucmVzLmpzb24oe1xuICAgIHN0YXR1czogXCJlcnJvclwiXG4gIH0pO1xufVxuXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGxvZ2dlcignZGV2JykpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtleHRlbmRlZDogZmFsc2V9KSk7XG5hcHAudXNlKGVycm9ySGFuZGxlcik7XG5cbnJlcXVpcmUoJy4vc2VydmVyL3JvdXRlcycpKGFwcCk7XG5hcHAuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDIwMCkuc2VuZCh7XG4gIG1lc3NhZ2U6ICdOb3RoaW5nIHRvIHNlZSBoZXJlLiBOb3QgZG9pbmcgYW55IGZhbmN5IDQwNCBzdHVmZidcbn0pKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXX0=